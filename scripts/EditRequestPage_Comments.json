{
  "content": "/**\n * @fileoverview Client script functions for EditRequest page.\n * \n * Modification of Comments for the specific request.\n */\n\n\n/**\n * Checks if person can perform resolve action on a comment.\n * Only admins and request owners can do it.\n *\n * @param {User} user - current user;\n * @param {string} requestOwnerEmail - email of the request owner;\n * @return {boolean} showing if user can perform resolve action.\n */\nfunction canUserResolveComment(user, requestOwnerEmail) {\n  if (user.roles.indexOf(\u0027Admins\u0027) \u003e -1) {\n    return true;\n  }\n  \n  if (user.Email \u003d\u003d\u003d requestOwnerEmail) {\n    return true;\n  }\n  \n  return false;\n}\n\n\n/**\n * Checks availability of \u0027resolve comment\u0027 action based on approver status.\n * @param {string} approverStatus - status of approver;\n * @return {boolean} availability flag for \u0027resolve comment\u0027 action.\n */\nfunction isResolveCommentAvailableForApproverStatus(approverStatus) {\n  return approverStatus \u003d\u003d\u003d window.Status.Rejected;\n}\n\n\n/**\n * Resolves rejection comment by invoking a corresponding server-side method.\n * @param {Comment} comment - currently edited comment record.\n */\nfunction resolveComment(comment) {\n  app.showDialog(app.pageFragments.Loading);\n  google.script.run\n    .withSuccessHandler(function(result) {\n      app.datasources.RequestDetails.load(function() {\n        app.closeDialog();\n      });\n    })\n    .withFailureHandler(function(error) {\n      app.closeDialog();\n      console.error(\u0027resolveComment error: \u0027 + error.message);\n    })\n    .resolveComment(comment._key);\n}\n",
  "key": "dSSt3BBKa73KN3z1CxQdIdQU0IpHoNDg",
  "name": "EditRequestPage_Comments",
  "type": "CLIENT"
}