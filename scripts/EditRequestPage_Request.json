{
  "content": "/**\n * @fileoverview Client script functions for EditRequest page.\n * \n * Request record modification.\n */\n\n\n/**\n * Loads page\u0027s datasource using requestId from the \n *     custom property as a filter.\n */\nfunction loadEditRequestPage() {\n  var requestDetailsPage \u003d app.pages.EditRequest;\n  var requestId \u003d requestDetailsPage.properties.requestId;\n  \n  if (!requestId) {\n    app.showPage(app.pages.Main);\n    return;\n  }\n  \n  requestDetailsPage.descendants.Tabs1.selectedTab \u003d 0;\n  \n  var requestDs \u003d app.datasources.RequestDetails;\n  requestDs.query.parameters.requestKey \u003d requestId;\n  \n  app.showDialog(app.pageFragments.Loading);\n  requestDs.load({\n    success: function() {\n      if (requestDs.items.length \u003d\u003d\u003d 0) {\n        app.closeDialog();\n        return;\n      }\n      \n      if (requestDs.item.WorkflowStages.length \u003d\u003d\u003d 0) {\n        requestDs.relations.WorkflowStages.createItem(function() {\n           app.closeDialog();\n        });\n      } else {\n        app.closeDialog();\n      }\n    }, \n    failure: function() {\n      app.closeDialog();\n    }\n  });\n}\n\n\n/**\n * Starts loading EditRequest page by resolving the request id from the url.\n */\nfunction startLoading() {\n  google.script.url.getLocation(function(location) {\n    var requestId \u003d location.parameter.requestId;\n    if (requestId) {\n      app.pages.EditRequest.properties.requestId \u003d requestId;\n    }\n    loadEditRequestPage();\n  });\n}\n\n\n/**\n * Provides appropriate wording for submit button based on request status.\n *\n * @param {string} status - request status;\n * @return {string} text for submit button.\n */\nfunction getSubmitButtonTextForStatus(status, autoCloseEnabled) {\n  if (status \u003d\u003d\u003d window.Status.Draft) {\n    return \u0027Submit\u0027;\n  }\n  if (status \u003d\u003d\u003d window.Status.Closed) {\n    return \u0027Closed\u0027;\n  }\n  if (status \u003d\u003d\u003d window.Status.Rejected) {\n    return \u0027Re-submit\u0027;\n  }\n  if (status \u003d\u003d\u003d window.Status.Approved \u0026\u0026 !autoCloseEnabled) {\n    return \u0027Close\u0027;\n  }\n  return \u0027Submitted\u0027;\n}\n\n\n\n/**\n * Checks availability of \u0027submit\u0027 action based on request status.\n * @param {string} status - request status;\n * @return {boolean} availability flag for \u0027submit\u0027 action.\n */\nfunction isSubmitEnabledForStatus(status, autoCloseEnabled) {\n  if ([window.Status.Draft,\n       window.Status.Rejected].indexOf(status) \u003e -1) {\n    return true;\n  }\n  \n  if (status \u003d\u003d\u003d window.Status.Approved \u0026\u0026 !autoCloseEnabled) {\n    return true;\n  }\n  \n  return false;\n}\n\n\n/**\n * Checks availability of \u0027cancel\u0027 action based on request status.\n * @param {string} status - request status;\n * @return {boolean} availability flag for \u0027cancel\u0027 action.\n */\nfunction isCancelEnabledForStatus(status) {\n  if ([window.Status.Pending,\n       window.Status.Rejected].indexOf(status) \u003e -1) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * Checks availability of \u0027add more approvers\u0027 action based on request status.\n * @param {string} status - request status;\n * @return {boolean} availability flag for \u0027add more approvers\u0027 action.\n */\nfunction canAddMoreApproversForStatus(status) {\n  if ([window.Status.Draft,\n       window.Status.Rejected].indexOf(status) \u003e -1) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * Checks availability of \u0027reorder approvers\u0027 action based on request status.\n * @param {string} status - request status;\n * @return {boolean} availability flag for \u0027reorder approvers\u0027 action.\n */\nfunction canChangeOrderForApproverInStatus(approverStatus) {\n  return approverStatus \u003d\u003d\u003d window.Status.Pending;\n}\n\n\n/**\n * Submits request for approval by invoking a corresponding server-side method.\n * Checks prerequisites first.\n * @param {Datasource} requestDatasource - currently edited request datasource.\n */\nfunction submitRequest(requestDatasource) {\n  var request \u003d requestDatasource.item;\n  \n  if (isSubmitEnabledForStatus(request.Status, request.AutoClose)) {\n    var isValid \u003d true;\n    \n    var stageRows \u003d app.pages.EditRequest.descendants.StagesList.children._values;\n    for (var i \u003d 0; i \u003c request.WorkflowStages.length; i++) {\n      if (request.WorkflowStages[i].Approvers.length \u003d\u003d\u003d 0) {\n        stageRows[i].descendants.ApproversError.visible \u003d true;\n        stageRows[i].descendants.UserPicker1.validationErrors \u003d [\u0027\u0027];\n        isValid \u003d false;\n      } else {\n        stageRows[i].descendants.UserPicker1.validationErrors \u003d [];\n      }\n    }\n\n    if (!isValid) {\n      return;\n    }\n    \n    app.showDialog(app.pageFragments.Loading);\n\n    if (request.Status \u003d\u003d\u003d window.Status.Approved \u0026\u0026 !request.AutoClose) {\n      google.script.run\n        .withSuccessHandler(function(result) {\n          app.closeDialog();\n          requestDatasource.load();\n        })\n        .withFailureHandler(function(error) {\n          app.closeDialog();\n          console.error(\u0027closeRequest error: \u0027 + JSON.stringify(error));\n        })\n        .closeRequest(request._key);\n    } else {\n      google.script.run\n        .withSuccessHandler(function(result) {\n          app.closeDialog();\n          requestDatasource.load();\n          app.datasources.AwaitingMyApprovalCount.load();\n        })\n        .withFailureHandler(function(error) {\n          app.closeDialog();\n          console.error(\u0027submitRequest error: \u0027 + JSON.stringify(error));\n        })\n        .submitForApproval(request._key);\n    }\n  }\n}\n\n\n/**\n * Cancels request for approval by invoking a corresponding server-side method.\n * @param {Datasource} requestDatasource - currently edited request datasource.\n */\nfunction cancelRequest(requestDatasource) {\n  var request \u003d requestDatasource.item;\n  \n  if (isCancelEnabledForStatus(request.Status)) {\n    app.showDialog(app.pageFragments.Loading);\n    \n    google.script.run\n      .withSuccessHandler(function(result) {\n        requestDatasource.load();\n        app.datasources.AwaitingMyApprovalCount.load();\n        app.closeDialog();\n      })\n      .withFailureHandler(function(error) {\n        console.error(\u0027cancelRequest error: \u0027 + JSON.stringify(error));\n        app.closeDialog();\n      })\n      .cancelRequest(request._key);\n  }\n}\n\n\n/**\n * Deletes request by invoking a corresponding server-side method.\n * @param {Datasource} requestDatasource - currently edited request datasource.\n */\nfunction deleteRequest(requestDatasource) {\n  if (confirm(\u0027Are you sure you want to delete this request?\u0027)) {\n    app.showDialog(app.pageFragments.Loading);\n    requestDatasource.deleteItem(function() {\n      app.closeDialog();\n      app.showPage(app.pages.Main);\n      app.datasources.AwaitingMyApprovalCount.load();\n    });\n  }\n}\n",
  "key": "bKb2x6qor1jNm459AI2ehRwPOIG384li",
  "name": "EditRequestPage_Request",
  "type": "CLIENT"
}