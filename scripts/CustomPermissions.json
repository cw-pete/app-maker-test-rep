{
  "content": "/**\n * Checks the permision to perform actions on approver\u0027s record.\n * It is allowed for admins, request owners and users who are \n * assigned as approvers.\n * \n * @param {Approver} approver - approver\u0027s record;\n * @param {User} user - current user;\n * @param {Array\u003cstring\u003e} userRoles - roles where user belongs to;\n * @return {boolean} flag indicating if permission granted.\n */\nfunction canModifyApproverRecord_(approver, user, userRoles) {\n  if (userRoles.indexOf(app.roles.Admins) \u003e -1) {\n    return true;\n  }\n\n  if (approver.Email \u003d\u003d\u003d user.getEmail()) {\n    return true;\n  }\n\n  if (approver.WorkflowStage.OrderNo \u003d\u003d\u003d 1) {\n    return true;\n  }\n\n  if (approver.WorkflowStage.Request.Owner \u003d\u003d\u003d user.getEmail()) {\n    return true;\n  }\n\n  return false;\n}\n\n\n/**\n * Checks the permision to approve request.\n * It is allowed for admins and request approvers.\n * \n * @param {Approver} approver - approver\u0027s record;\n * @param {User} user - current user;\n * @param {Array\u003cstring\u003e} userRoles - roles where user belongs to;\n * @return {boolean} flag indicating if permission granted.\n */\nfunction canApproveRequestRecord_(approver, user, userRoles) {\n  if (userRoles.indexOf(app.roles.Admins) \u003e -1) {\n    return true;\n  }\n\n  if (approver.Email \u003d\u003d\u003d user.getEmail()) {\n    return true;\n  }\n  \n  return false;\n}\n\n\n/**\n * Checks the permision to perform actions on stage\u0027s record.\n * It is allowed for admins and request owners.\n * \n * @param {WorkflowStage} stage - stage record;\n * @param {User} user - current user;\n * @param {Array\u003cstring\u003e} userRoles - roles where user belongs to;\n * @return {boolean} flag indicating if permission granted.\n */\nfunction canModifyWorkflowStageRecord_(stage, user, userRoles) {\n  if (userRoles.indexOf(app.roles.Admins) \u003e -1) {\n    return true;\n  }\n  \n  if (stage.Request.Owner \u003d\u003d\u003d user.getEmail()) {\n    return true;\n  }\n  \n  return false;\n}\n\n\n/**\n * Checks the permision to perform actions on request\u0027s record.\n * It is allowed for admins and request owners.\n * \n * @param {Request} request - request record;\n * @param {User} user - current user;\n * @param {Array\u003cstring\u003e} userRoles - roles where user belongs to;\n * @return {boolean} flag indicating if permission granted.\n */\nfunction canModifyRequestRecord_(request, user, userRoles) {\n  if (userRoles.indexOf(app.roles.Admins) \u003e -1) {\n    return true;\n  }\n  \n  if (request.Owner \u003d\u003d\u003d user.getEmail()) {\n    return true;\n  }\n  \n  return false;\n}\n\n\n/**\n * Checks the permision for current user to perform actions on the request record.\n * It is allowed for admins and request owners.\n * Throws an exception if not allowed.\n * \n * @param {Request} request - request record;\n */\nfunction checkIfCurrentUserCanModifyRequest_(request) {\n  var currentUser \u003d Session.getActiveUser();\n  var currentUserRoles \u003d app.getActiveUserRoles();\n  \n  if (!canModifyRequestRecord_(request, currentUser, currentUserRoles)) {\n    throw new Error(\u0027User \u0027 + currentUser.getEmail() + \u0027 cannot modify request\u0027);\n  }\n}\n\n\n/**\n * Checks the permision to perform actions on approver\u0027s record.\n * It is allowed for admins, request owners and users who are \n * assigned as approvers.\n * Throws an exception if not allowed.\n * \n * @param {Approver} approver - approver\u0027s record;\n */\nfunction checkIfCurrentUserCanModifyApprover_(approver) {\n  var currentUser \u003d Session.getActiveUser();\n  var currentUserRoles \u003d app.getActiveUserRoles();\n  \n  if (!canModifyApproverRecord_(approver, currentUser, currentUserRoles)) {\n    throw new Error(\u0027User \u0027 + currentUser.getEmail() + \u0027 cannot modify approver\u0027);\n  }\n}\n\n\n/**\n * Checks the permision to approve request.\n * It is allowed for admins and users who are assigned as approvers.\n * Throws an exception if not allowed.\n * \n * @param {Approver} approver - approver\u0027s record;\n */\nfunction checkIfCurrentUserCanApproveRequest_(approver) {\n  var currentUser \u003d Session.getActiveUser();\n  var currentUserRoles \u003d app.getActiveUserRoles();\n  \n  if (!canApproveRequestRecord_(approver, currentUser, currentUserRoles)) {\n    throw new Error(\u0027User \u0027 + currentUser.getEmail() + \u0027 cannot approve request\u0027);\n  }\n}",
  "key": "VqdIyTB0YjsFrmggDnrkUZ1N9mlKGx5p",
  "name": "CustomPermissions",
  "type": "SERVER"
}